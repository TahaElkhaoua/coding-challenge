[{"C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\index.js":"1","C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\app.js":"2","C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\routes.js":"3","C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\hoc\\Layout\\Layout.js":"4","C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\components\\DataList\\DataList.js":"5","C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\config\\config.js":"6","C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\components\\DataList\\template\\RepoTemplate.js":"7"},{"size":142,"mtime":1606244469493,"results":"8","hashOfConfig":"9"},{"size":343,"mtime":1606258390602,"results":"10","hashOfConfig":"9"},{"size":465,"mtime":1606258685733,"results":"11","hashOfConfig":"9"},{"size":296,"mtime":1606258513670,"results":"12","hashOfConfig":"9"},{"size":4704,"mtime":1606269218319,"results":"13","hashOfConfig":"9"},{"size":111,"mtime":1606260185674,"results":"14","hashOfConfig":"9"},{"size":350,"mtime":1606265428183,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1168sae",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\index.js",[],"C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\app.js",[],"C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\routes.js",[],"C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\hoc\\Layout\\Layout.js",["31"],"C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\components\\DataList\\DataList.js",["32","33","34"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nimport { URL } from '../../config/config'\r\n\r\nimport RepoTemplate from './template/RepoTemplate'\r\nimport './DataList.css'\r\n\r\n\r\nclass DataList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.myRef = React.createRef()   // Create a ref object \r\n    }\r\n\r\n    state = {\r\n        page: (this.props.match.params.page) ? this.props.match.params.page : 0, //page number,\r\n        displayedRepos: [], // An Array to hold all the displayed repos\r\n        error: false, //Error Detector\r\n        errorMsg: ``,\r\n        showNext: false,\r\n        currentSlice: 0\r\n    }\r\n    repos = [] //only gets updated once no need to be in state\r\n\r\n    //Getting the JSON Data through axios\r\n    UNSAFE_componentWillMount(){\r\n        //Data will be fetched here before the component renders\r\n        this.loadRepos()\r\n    }\r\n\r\n    componentWillReceiveProps(props){ // handle page update\r\n        this.myRef.current.scrollTo(0, 0);\r\n        this.repos = [] \r\n            this.setState({\r\n                page: (props.match.params.page) ? props.match.params.page : 0, //page number,\r\n                displayedRepos: [], // An Array to hold all the displayed repos\r\n                error: false, //Error Detector\r\n                errorMsg: ``,\r\n                showNext: false,\r\n                currentSlice: 0\r\n            })\r\n            this.loadRepos()\r\n    }\r\n\r\n    loadRepos(){\r\n        //check if repos is already Fetched\r\n        if(this.repos.length != 0){\r\n            (this.state.displayedRepos.length === this.repos.length) ? //check if all repos are displayed \r\n            this.setState({showNext: true}) : //if yes display next page button\r\n            this.setState(prevState => {\r\n                return {\r\n                    displayedRepos: [...prevState.displayedRepos, ...this.repos.slice(prevState.currentSlice, prevState.currentSlice + 5)],\r\n                    currentSlice: prevState.currentSlice + 5\r\n                }\r\n            })\r\n\r\n            return true; // stop here if data already exists\r\n        }\r\n        //the actual data fetch code\r\n        axios.get(`${URL}&page=${this.state.page}`)\r\n        .then(result => { //Data Retrieved Successfuly\r\n            this.repos = result.data.items\r\n            this.setState({\r\n                displayedRepos: [...this.repos.slice(0, 5)],\r\n                currentSlice: 5\r\n            })\r\n        })\r\n        .catch(err=>this.setState({\r\n            error: true,\r\n            errorMsg: err.message\r\n        }))\r\n    } \r\n    //render the repositories into a list\r\n    renderRepos(){\r\n        return ((this.state.error) ?  //check if there s an error if not display data through template\r\n            (<div className=\"error-danger\">{this.state.errorMsg}</div>)\r\n            : this.state.displayedRepos.map((repo, i) => {\r\n                return (\r\n                    <RepoTemplate key={i}\r\n                        owner={repo.owner.login}\r\n                        ownerImg={repo.owner.avatar_url}\r\n                        name={repo.name}\r\n                        description={repo.description}\r\n                        stars={repo.stargazers_count}\r\n                        hasIssues={repo.has_issues}\r\n                        openIssues={repo.open_issues}\r\n                    /> // A repo template to keep code seperated and cleaner\r\n                )\r\n            }))\r\n    }\r\n\r\n    handleScroll(event){\r\n        const target = event.target\r\n        // console.log(target.scrollHeight, target.scrollTop, target.clientHeight)\r\n        if(((target.scrollHeight - target.scrollTop ) <= (target.clientHeight + 200)) && this.repos.length != 0 && !this.state.showNext){\r\n            this.loadRepos()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={`content`} onScroll={(e) => this.handleScroll(e)} ref={this.myRef}>\r\n                <div className={`data-list data-list-${(this.repos.length === 0) ? 'loading' : 'loaded'}`}> {/* different classes for when components are loading */}\r\n                    <div className=\"loader\">\r\n                        <div className=\"loader-rotate\"></div>    \r\n                    </div> {/* Loader box */}\r\n                    <div className=\"data-list-content\">\r\n                        {this.renderRepos()}\r\n                    </div>\r\n                    {(this.state.showNext) ? (\r\n                            <Link  to={`/${(++this.state.page)}`}><button className=\"next-page\">Load next page?</button></Link>\r\n                        ) : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataList","C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\config\\config.js",[],"C:\\Users\\lebowski\\Documents\\learnProjects\\gemography\\src\\components\\DataList\\template\\RepoTemplate.js",["35","36","37","38","39","40"],{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":23},{"ruleId":"45","severity":1,"message":"46","line":50,"column":30,"nodeType":"47","messageId":"48","endLine":50,"endColumn":32},{"ruleId":"45","severity":1,"message":"46","line":98,"column":108,"nodeType":"47","messageId":"48","endLine":98,"endColumn":110},{"ruleId":"49","severity":1,"message":"50","line":114,"column":47,"nodeType":"51","endLine":114,"endColumn":57},{"ruleId":"41","severity":1,"message":"52","line":5,"column":19,"nodeType":"43","messageId":"44","endLine":5,"endColumn":27},{"ruleId":"41","severity":1,"message":"53","line":5,"column":29,"nodeType":"43","messageId":"44","endLine":5,"endColumn":33},{"ruleId":"41","severity":1,"message":"54","line":5,"column":35,"nodeType":"43","messageId":"44","endLine":5,"endColumn":46},{"ruleId":"41","severity":1,"message":"55","line":5,"column":48,"nodeType":"43","messageId":"44","endLine":5,"endColumn":53},{"ruleId":"41","severity":1,"message":"56","line":5,"column":55,"nodeType":"43","messageId":"44","endLine":5,"endColumn":64},{"ruleId":"41","severity":1,"message":"57","line":5,"column":66,"nodeType":"43","messageId":"44","endLine":5,"endColumn":76},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'ownerImg' is assigned a value but never used.","'name' is assigned a value but never used.","'description' is assigned a value but never used.","'stars' is assigned a value but never used.","'hasIssues' is assigned a value but never used.","'openIssues' is assigned a value but never used."]